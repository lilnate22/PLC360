
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xfd\x00\xe5G7\x88\x1b\xb0N\xe1\xe4\x11\\\x90\x10\xf4'
    
_lr_action_items = {'DO':([14,16,17,18,20,22,26,46,59,60,63,64,67,74,75,78,86,87,93,94,96,97,98,99,103,104,],[-16,-18,-17,-19,-12,38,-14,-21,-15,-13,-8,-9,-20,-27,-26,-44,-28,-29,-31,-30,-34,-35,-33,-32,-36,-37,]),'CONS':([1,8,19,28,34,36,39,40,79,],[12,12,12,12,12,12,12,12,12,]),'THEN':([14,16,17,18,20,26,30,46,59,60,63,64,67,74,75,78,86,87,93,94,96,97,98,99,103,104,],[-16,-18,-17,-19,-12,-14,51,-21,-15,-13,-8,-9,-20,-27,-26,-44,-28,-29,-31,-30,-34,-35,-33,-32,-36,-37,]),'CAR':([1,8,19,28,34,36,39,40,79,],[13,13,13,13,13,13,13,13,13,]),'NUMBER':([1,8,19,24,28,31,32,34,36,39,40,47,56,61,65,66,79,],[14,14,14,44,14,44,44,14,14,14,14,44,44,44,44,44,14,]),'WHILE':([0,29,38,51,90,101,],[1,1,1,1,1,1,]),'FI':([2,3,7,10,11,14,16,17,18,20,26,46,49,50,59,60,63,64,67,74,75,78,82,86,87,93,94,96,97,98,99,102,103,104,107,108,],[-7,-4,-3,-6,-5,-16,-18,-17,-19,-12,-14,-21,-38,-2,-15,-13,-8,-9,-20,-27,-26,-44,-39,-28,-29,-31,-30,-34,-35,-33,-32,107,-36,-37,-40,-41,]),'NULL':([1,8,19,28,34,36,39,40,79,],[15,15,15,15,15,15,15,15,15,]),'MINUS':([14,16,17,18,20,22,26,30,35,46,49,58,59,60,63,64,67,74,75,78,86,87,93,94,96,97,98,99,103,104,],[-16,-18,-17,-19,-12,40,-14,40,40,-21,40,40,-15,-13,-8,-9,-20,-27,-26,-44,-28,-29,-31,-30,-34,-35,-33,-32,-36,-37,]),'QUESTIONMARK':([15,21,23,],[33,37,41,]),'RPAREN':([14,16,17,18,20,26,35,43,44,46,54,55,57,58,59,60,63,64,67,68,69,74,75,76,77,78,80,81,83,84,86,87,88,89,91,92,93,94,95,96,97,98,99,103,104,105,],[-16,-18,-17,-19,-12,-14,59,-25,-24,-21,74,75,78,-11,-15,-13,-8,-9,-20,86,87,-27,-26,93,94,-44,96,97,98,99,-28,-29,-43,101,103,104,-31,-30,-10,-34,-35,-33,-32,-36,-37,-42,]),'SEMICOLON':([2,3,7,10,11,14,16,17,18,20,26,46,49,59,60,63,64,67,74,75,78,82,86,87,93,94,96,97,98,99,103,104,107,108,],[-7,-4,29,-6,-5,-16,-18,-17,-19,-12,-14,-21,-38,-15,-13,-8,-9,-20,-27,-26,-44,-39,-28,-29,-31,-30,-34,-35,-33,-32,-36,-37,-40,-41,]),'PLUS':([14,16,17,18,20,22,26,30,35,46,49,58,59,60,63,64,67,74,75,78,86,87,93,94,96,97,98,99,103,104,],[-16,-18,-17,-19,-12,39,-14,39,39,-21,39,39,-15,-13,-8,-9,-20,-27,-26,-44,-28,-29,-31,-30,-34,-35,-33,-32,-36,-37,]),'COMMA':([14,16,17,18,20,26,42,43,44,46,52,53,58,59,60,63,64,67,74,75,78,86,87,88,93,94,96,97,98,99,103,104,],[-16,-18,-17,-19,-12,-14,66,-25,-24,-21,72,73,79,-15,-13,-8,-9,-20,-27,-26,-44,-28,-29,100,-31,-30,-34,-35,-33,-32,-36,-37,]),'DEFINE':([0,29,38,51,90,101,],[5,5,5,5,5,5,]),'IDENT':([0,1,5,8,19,28,29,31,32,34,36,38,39,40,47,51,56,61,65,70,72,79,90,100,101,],[6,17,27,17,17,17,6,52,54,17,17,6,17,17,68,6,76,80,83,88,91,17,6,88,6,]),'END':([2,3,7,10,11,14,16,17,18,20,26,46,49,50,59,60,63,64,67,74,75,78,82,86,87,93,94,96,97,98,99,103,104,106,107,108,],[-7,-4,-3,-6,-5,-16,-18,-17,-19,-12,-14,-21,-38,-2,-15,-13,-8,-9,-20,-27,-26,-44,-39,-28,-29,-31,-30,-34,-35,-33,-32,-36,-37,108,-40,-41,]),'ELSE':([2,3,7,10,11,14,16,17,18,20,26,46,49,50,59,60,63,64,67,71,74,75,78,82,86,87,93,94,96,97,98,99,103,104,107,108,],[-7,-4,-3,-6,-5,-16,-18,-17,-19,-12,-14,-21,-38,-2,-15,-13,-8,-9,-20,90,-27,-26,-44,-39,-28,-29,-31,-30,-34,-35,-33,-32,-36,-37,-40,-41,]),'LPAREN':([1,8,12,13,17,19,25,28,33,34,36,37,39,40,41,48,79,],[19,19,31,32,34,19,47,19,56,19,19,61,19,19,65,70,19,]),'TIMES':([14,16,17,18,20,26,46,59,60,63,64,67,74,75,78,86,87,93,94,96,97,98,99,103,104,],[-16,-18,-17,-19,36,-14,-21,-15,-13,36,36,-20,-27,-26,-44,-28,-29,-31,-30,-34,-35,-33,-32,-36,-37,]),'IF':([0,29,38,51,90,101,],[8,8,8,8,8,8,]),'ASSIGNOP':([6,],[28,]),'INT':([1,8,19,28,34,36,39,40,79,],[21,21,21,21,21,21,21,21,21,]),'OD':([2,3,7,10,11,14,16,17,18,20,26,46,49,50,59,60,62,63,64,67,74,75,78,82,86,87,93,94,96,97,98,99,103,104,107,108,],[-7,-4,-3,-6,-5,-16,-18,-17,-19,-12,-14,-21,-38,-2,-15,-13,82,-8,-9,-20,-27,-26,-44,-39,-28,-29,-31,-30,-34,-35,-33,-32,-36,-37,-40,-41,]),'LIST':([1,8,19,28,34,36,39,40,79,],[23,23,23,23,23,23,23,23,23,]),'SQUAREBRAC1':([1,8,19,24,28,31,32,34,36,39,40,47,56,61,65,66,73,79,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'SQUAREBRAC2':([24,42,43,44,45,46,67,85,],[46,-23,-25,-24,67,-21,-20,-22,]),'CDR':([1,8,19,28,34,36,39,40,79,],[25,25,25,25,25,25,25,25,25,]),'$end':([2,3,4,7,9,10,11,14,16,17,18,20,26,46,49,50,59,60,63,64,67,74,75,78,82,86,87,93,94,96,97,98,99,103,104,107,108,],[-7,-4,0,-3,-1,-6,-5,-16,-18,-17,-19,-12,-14,-21,-38,-2,-15,-13,-8,-9,-20,-27,-26,-44,-39,-28,-29,-31,-30,-34,-35,-33,-32,-36,-37,-40,-41,]),'PROC':([27,],[48,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmt_list':([0,29,38,51,90,101,],[9,50,62,71,102,106,]),'func_call':([1,8,19,28,34,36,39,40,79,],[16,16,16,16,16,16,16,16,16,]),'term':([1,8,19,28,34,39,40,79,],[20,20,20,20,20,63,64,20,]),'if_stmt':([0,29,38,51,90,101,],[10,10,10,10,10,10,]),'ListItems':([24,66,],[45,85,]),'expr':([1,8,19,28,34,79,],[22,30,35,49,58,58,]),'List':([1,8,19,24,28,31,32,34,36,39,40,47,56,61,65,66,73,79,],[18,18,18,43,18,43,43,18,18,18,18,43,43,43,43,43,92,18,]),'define_stmt':([0,29,38,51,90,101,],[2,2,2,2,2,2,]),'stmt':([0,29,38,51,90,101,],[7,7,7,7,7,7,]),'assign_stmt':([0,29,38,51,90,101,],[3,3,3,3,3,3,]),'Item':([24,31,32,47,56,61,65,66,],[42,53,55,69,77,81,84,42,]),'while_stmt':([0,29,38,51,90,101,],[11,11,11,11,11,11,]),'program':([0,],[4,]),'param_list':([70,100,],[89,105,]),'expr_list':([34,79,],[57,95,]),'fact':([1,8,19,28,34,36,39,40,79,],[26,26,26,26,26,60,26,26,26,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list','program',1,'p_program','interpreterext2.py',137),
  ('stmt_list -> stmt SEMICOLON stmt_list','stmt_list',3,'p_stmt_list','interpreterext2.py',145),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','interpreterext2.py',146),
  ('stmt -> assign_stmt','stmt',1,'p_stmt','interpreterext2.py',155),
  ('stmt -> while_stmt','stmt',1,'p_stmt','interpreterext2.py',156),
  ('stmt -> if_stmt','stmt',1,'p_stmt','interpreterext2.py',157),
  ('stmt -> define_stmt','stmt',1,'p_stmt','interpreterext2.py',158),
  ('expr -> expr PLUS term','expr',3,'p_add','interpreterext2.py',162),
  ('expr -> expr MINUS term','expr',3,'p_sub','interpreterext2.py',166),
  ('expr_list -> expr COMMA expr_list','expr_list',3,'p_expr_list','interpreterext2.py',170),
  ('expr_list -> expr','expr_list',1,'p_expr_list','interpreterext2.py',171),
  ('expr -> term','expr',1,'p_expr_term','interpreterext2.py',179),
  ('term -> term TIMES fact','term',3,'p_mult','interpreterext2.py',183),
  ('term -> fact','term',1,'p_term_fact','interpreterext2.py',187),
  ('fact -> LPAREN expr RPAREN','fact',3,'p_fact_expr','interpreterext2.py',191),
  ('fact -> NUMBER','fact',1,'p_fact_NUM','interpreterext2.py',195),
  ('fact -> IDENT','fact',1,'p_fact_IDENT','interpreterext2.py',199),
  ('fact -> func_call','fact',1,'p_fact_funcall','interpreterext2.py',203),
  ('fact -> List','fact',1,'p_fact_List','interpreterext2.py',207),
  ('List -> SQUAREBRAC1 ListItems SQUAREBRAC2','List',3,'p_List','interpreterext2.py',211),
  ('List -> SQUAREBRAC1 SQUAREBRAC2','List',2,'p_List_2','interpreterext2.py',215),
  ('ListItems -> Item COMMA ListItems','ListItems',3,'p_ListItems_comma','interpreterext2.py',219),
  ('ListItems -> Item','ListItems',1,'p_ListItems_single','interpreterext2.py',224),
  ('Item -> NUMBER','Item',1,'p_Item_num','interpreterext2.py',228),
  ('Item -> List','Item',1,'p_Item_List','interpreterext2.py',232),
  ('fact -> CAR LPAREN Item RPAREN','fact',4,'p_fact_car','interpreterext2.py',236),
  ('fact -> CAR LPAREN IDENT RPAREN','fact',4,'p_ident_car','interpreterext2.py',240),
  ('fact -> CDR LPAREN IDENT RPAREN','fact',4,'p_ident_cdr','interpreterext2.py',244),
  ('fact -> CDR LPAREN Item RPAREN','fact',4,'p_fact_cdr','interpreterext2.py',248),
  ('fact -> NULL QUESTIONMARK LPAREN Item RPAREN','fact',5,'p_fact_null','interpreterext2.py',252),
  ('fact -> NULL QUESTIONMARK LPAREN IDENT RPAREN','fact',5,'p_ident_null','interpreterext2.py',256),
  ('fact -> LIST QUESTIONMARK LPAREN Item RPAREN','fact',5,'p_fact_list','interpreterext2.py',260),
  ('fact -> LIST QUESTIONMARK LPAREN IDENT RPAREN','fact',5,'p_ident_list','interpreterext2.py',264),
  ('fact -> INT QUESTIONMARK LPAREN IDENT RPAREN','fact',5,'p_ident_int','interpreterext2.py',268),
  ('fact -> INT QUESTIONMARK LPAREN Item RPAREN','fact',5,'p_fact_int','interpreterext2.py',272),
  ('fact -> CONS LPAREN IDENT COMMA IDENT RPAREN','fact',6,'p_ident_cons','interpreterext2.py',276),
  ('fact -> CONS LPAREN Item COMMA List RPAREN','fact',6,'p_fact_cons','interpreterext2.py',280),
  ('assign_stmt -> IDENT ASSIGNOP expr','assign_stmt',3,'p_assn','interpreterext2.py',286),
  ('while_stmt -> WHILE expr DO stmt_list OD','while_stmt',5,'p_while','interpreterext2.py',290),
  ('if_stmt -> IF expr THEN stmt_list ELSE stmt_list FI','if_stmt',7,'p_if','interpreterext2.py',294),
  ('define_stmt -> DEFINE IDENT PROC LPAREN param_list RPAREN stmt_list END','define_stmt',8,'p_def','interpreterext2.py',298),
  ('param_list -> IDENT COMMA param_list','param_list',3,'p_param_list','interpreterext2.py',302),
  ('param_list -> IDENT','param_list',1,'p_param_list','interpreterext2.py',303),
  ('func_call -> IDENT LPAREN expr_list RPAREN','func_call',4,'p_func_call','interpreterext2.py',311),
]
